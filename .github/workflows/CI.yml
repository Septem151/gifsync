name: GifSync CI

on:
  pull_request:
    branches:
      - "**"
  push:
    branches:
      - "**"

jobs:
  build:
    # ubuntu-latest == Ubuntu 18.04 as of 08-13-2020
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
    - name: Install dependencies
      run: |
        sudo apt-get update && sudo apt-get install -y imagemagick
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest pytest-cov
        python -m pytest tests/ --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml --cov=gifsync tests/ --cov-report=xml:cov-${{ matrix.python-version }}.xml --cov-report=html:cov_html-${{ matrix.python-version }}
    - name: Upload pytest test results
      uses: actions/upload-artifact@v1
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: junit/test-results-${{ matrix.python-version }}.xml
      if: ${{ always() }}
    - name: Upload pytest coverage html results
      uses: actions/upload-artifact@v1
      with:
        name: coverage-html-results-${{ matrix.python-version }}
        path: cov_html-${{ matrix.python-version }}
    - name: Upload pytest coverage xml results
      uses: actions/upload-artifact@v1
      with:
        name: coverage-xml-results-${{ matrix.python-version }}
        path: cov-${{ matrix.python-version }}.xml
